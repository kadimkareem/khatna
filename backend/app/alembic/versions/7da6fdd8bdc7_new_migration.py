"""new migration

Revision ID: 7da6fdd8bdc7
Revises: 2488ff962281
Create Date: 2024-07-15 00:54:48.618595

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel


# revision identifiers, used by Alembic.
revision: str = '7da6fdd8bdc7'
down_revision: Union[str, None] = '2488ff962281'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('route',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('start_tim', sa.DateTime(), nullable=True),
    sa.Column('end_time', sa.DateTime(), nullable=True),
    sa.Column('start_date', sa.DateTime(), nullable=True),
    sa.Column('return_date', sa.DateTime(), nullable=True),
    sa.Column('start_location', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('distenation', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('estimated_duration', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('driver',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('license_number', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('license_expiry_date', sa.DateTime(), nullable=True),
    sa.Column('years_of_experience', sa.Integer(), nullable=True),
    sa.Column('discription', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('rating', sa.Float(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('license_number'),
    sa.UniqueConstraint('user_id')
    )
    op.create_index(op.f('ix_driver_id'), 'driver', ['id'], unique=False)
    op.create_table('passenger',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('type', sa.Enum('mail', 'female', 'mix', name='passengertype'), nullable=True),
    sa.Column('location', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('distination', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('payment_method', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('pickup_date', sa.DateTime(), nullable=True),
    sa.Column('pickup_time', sa.DateTime(), nullable=True),
    sa.Column('pickup_location', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('return_date', sa.DateTime(), nullable=True),
    sa.Column('return_time', sa.DateTime(), nullable=True),
    sa.Column('service_hours', sa.Integer(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id')
    )
    op.create_index(op.f('ix_passenger_id'), 'passenger', ['id'], unique=True)
    op.create_table('car',
    sa.Column('model', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('year', sa.Integer(), nullable=True),
    sa.Column('color', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('photo', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('capacity', sa.Integer(), nullable=True),
    sa.Column('type', sa.Enum('bus', 'van', 'sedan', name='cartype'), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('license_plate', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('driver_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['driver_id'], ['driver.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('driver_id'),
    sa.UniqueConstraint('license_plate')
    )
    op.create_table('trip',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('estimation', sa.DateTime(), nullable=True),
    sa.Column('cost', sa.Float(), nullable=True),
    sa.Column('tripStatus', sa.Enum('start', 'in_way', 'arrive_you', 'cancelled', 'arrived_destination', name='tripstatus'), nullable=True),
    sa.Column('type', sa.Enum('daily', 'weekly', 'monthly', 'yearly', name='triptype'), nullable=True),
    sa.Column('driver_id', sa.Integer(), nullable=False),
    sa.Column('passenger_id', sa.Integer(), nullable=False),
    sa.Column('route_id', sa.Integer(), nullable=False),
    sa.Column('car_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['car_id'], ['car.id'], ),
    sa.ForeignKeyConstraint(['driver_id'], ['driver.id'], ),
    sa.ForeignKeyConstraint(['passenger_id'], ['passenger.id'], ),
    sa.ForeignKeyConstraint(['route_id'], ['route.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('car_id'),
    sa.UniqueConstraint('driver_id'),
    sa.UniqueConstraint('passenger_id'),
    sa.UniqueConstraint('route_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('trip')
    op.drop_table('car')
    op.drop_index(op.f('ix_passenger_id'), table_name='passenger')
    op.drop_table('passenger')
    op.drop_index(op.f('ix_driver_id'), table_name='driver')
    op.drop_table('driver')
    op.drop_table('route')
    # ### end Alembic commands ###
